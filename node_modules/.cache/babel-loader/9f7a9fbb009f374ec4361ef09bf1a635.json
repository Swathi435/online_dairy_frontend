{"ast":null,"code":"import companybuysmilkReducer from './CompanyBuySlice';\nimport companyReducer from './CompSlice';\nimport farmReducer from './FarmerSlice';\nimport customerReducer from './CustomerSlice';\nimport dealerReducer from './DealerSlice'; // steps - \n// 1. create store - only one \n// 2. provide the store to index.js \n// 3. create slices for components (one for each)\n// 4. use slices in components \n\nimport { configureStore } from '@reduxjs/toolkit'; // note - redux store can be created in multiple different ways. \n// latest way \n// step 1 for redux \n\nconsole.log('store');\nconst store = configureStore({\n  reducer: {\n    companybuysmilk: companybuysmilkReducer,\n    farm: farmReducer,\n    company: companyReducer,\n    customer: customerReducer,\n    dealer: dealerReducer\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/frontend/cg_ui_12Oct_B3/online_dairy_frontend/src/redux/store.js"],"names":["companybuysmilkReducer","companyReducer","farmReducer","customerReducer","dealerReducer","configureStore","console","log","store","reducer","companybuysmilk","farm","company","customer","dealer"],"mappings":"AAAA,OAAOA,sBAAP,MAAmC,mBAAnC;AACA,OAAOC,cAAP,MAA2B,aAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,aAAP,MAA0B,eAA1B,C,CACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CAEA;AACA;AAEA;;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,MAAMC,KAAK,GAAGH,cAAc,CACxB;AACII,EAAAA,OAAO,EAAE;AACLC,IAAAA,eAAe,EAAEV,sBADZ;AAELW,IAAAA,IAAI,EAAET,WAFD;AAGLU,IAAAA,OAAO,EAAEX,cAHJ;AAILY,IAAAA,QAAQ,EAAEV,eAJL;AAKLW,IAAAA,MAAM,EAAEV;AALH;AADb,CADwB,CAA5B;AAYA,eAAeI,KAAf","sourcesContent":["import companybuysmilkReducer from './CompanyBuySlice';\nimport companyReducer from './CompSlice';\nimport farmReducer from './FarmerSlice';\nimport customerReducer from './CustomerSlice';\nimport dealerReducer from './DealerSlice';\n// steps - \n// 1. create store - only one \n// 2. provide the store to index.js \n// 3. create slices for components (one for each)\n// 4. use slices in components \nimport { configureStore } from '@reduxjs/toolkit';\n\n// note - redux store can be created in multiple different ways. \n// latest way \n\n// step 1 for redux \nconsole.log('store');\nconst store = configureStore(\n    {\n        reducer: {\n            companybuysmilk: companybuysmilkReducer,\n            farm: farmReducer,\n            company: companyReducer,\n            customer: customerReducer,\n            dealer: dealerReducer,\n        }\n    }\n);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}